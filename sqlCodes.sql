Question 1: 
1.Created table and entered the values from the file attached

2.SELECT a.NAME, b.CONTACT
FROM VISITOR a
INNER JOIN VISITOR_DETAIL b
ON a.VID = b.VD_ID
WHERE a.STUDENT_ID IN (
    SELECT STUDENT_ID
    FROM STUDENT
    WHERE STDNAME = 'Fatima'
)

3.SELECT s1.STDNAME AS Student_1, s2.STDNAME AS Student_2
FROM STUDENT s1
JOIN GYM g1 ON s1.STUDENT_ID = g1.STUDENT_ID
JOIN GYM g2 ON g1.JOIN_DATE = g2.JOIN_DATE
JOIN STUDENT s2 ON g2.STUDENT_ID = s2.STUDENT_ID
WHERE s1.STUDENT_ID < s2.STUDENT_ID

4.SELECT s.STDNAME as STUDENT_NAMES
FROM STUDENT s
INNER JOIN GYM g
on g.STUDENT_ID = s.STUDENT_ID AND g.MEMBERSHIP_STATUS=0;

5.SELECT *
FROM HOSTEL H
INNER JOIN ROOM R 
ON H.HOSTEL_ID=R.HOSTEL_ID AND R.STRENGTH=0;

6.SELECT *
FROM STUDENT S
INNER JOIN VISITOR V ON S.Student_id = V.Student_id
WHERE S.Student_id IN (
    SELECT student_id 
    FROM VISITOR
    GROUP BY student_id
    HAVING count(*) > 3
);

7.SELECT *
FROM HOSTEL H
JOIN MAINTENANCE M ON H.HOSTEL_ID = M.HOSTEL_ID
WHERE H.ADDRESS = '123 Main Street, Lahore'
AND M.MAINTENANCE_DATE BETWEEN TO_DATE('02/01/2022', 'MM/DD/YYYY') AND TO_DATE('03/01/2022', 'MM/DD/YYYY')

8.SELECT H.HOSTEL_ID, SUM(M.TOTAL) AS TOTAL
FROM HOSTEL H
LEFT OUTER JOIN MAINTENANCE M ON H.HOSTEL_ID = M.HOSTEL_ID
GROUP BY H.HOSTEL_ID;

9.SELECT *
FROM STUDENT s
LEFT outer join VISITOR v
ON s.STUDENT_ID= v.STUDENT_ID;

10.SELECT S.STDNAME
FROM STUDENT S
JOIN BILL_COLLECTION B ON S.STUDENT_ID = B.STD_ID
WHERE B.OUTSTANDING = (
    SELECT MAX(OUTSTANDING) FROM BILL_COLLECTION
);

11.SELECT STDNAME as "Student Requested"
FROM STUDENT
WHERE STUDENT_ID IN (
SELECT REQUESTERID
FROM SHIFT_REQUESTS
)

12.SELECT v.STUDENT_ID,v.NAME,v.relation
FROM VISITOR v
INNER JOIN VISITOR_DETAIL vd ON v.VID = vd.VD_ID
INNER JOIN STUDENT s ON v.STUDENT_ID = s.STUDENT_ID
WHERE s.STDNAME = 'Ameer';

13.SELECT s.STDName 
FROM STUDENT s
INNER JOIN GYM g
ON s.student_ID = g.student_ID
left join BILL_COLLECTION bc
ON s.student_ID = bc.STD_ID
WHERE g.membership_status = 1
AND bc.gym_dues IS NULL;

14.SELECT *
FROM VISITOR
WHERE (LEAVE_TIME- ENTER_TIME ) = (
SELECT max((LEAVE_TIME -ENTER_TIME))
FROM VISITOR
)

15.SELECT s.student_id,s.stdname, sq.status
FROM STUDENT s
INNER join SHIFT_REQUESTS sq
ON s.student_id= sq.requesterid

16.SELECT a.*
FROM VISITOR a
INNER JOIN VISITOR b
on a.NAME = b.NAME 
AND a.VID != b.VID
AND a.RELATION = b.RELATION

17.SELECT S.*
FROM STUDENT S
WHERE S.stdname IN (
    SELECT stdname
    FROM STUDENT
    GROUP BY stdname
    HAVING COUNT(*) > 1
);
18.SELECT b.STDName as StudentName, A.currentBillingMonth as BillingMonth, A.Total as Current_BillAmount,A.outstanding as OutstandingBillAmount
FROM STUDENT b
JOIN BILL_COLLECTION A ON b.student_ID = A.STD_ID
WHERE A.currentBillingMonth = 'March' AND A.billPaidDate >=TO_DATE('2023-03-01', 'YYYY-MM-DD') 
AND A.billPaidDate < TO_DATE('2023-04-01', 'YYYY-\MM-DD');

19.SELECT s.STDName
FROM STUDENT s
WHERE s.student_ID NOT IN (
SELECT BC.STD_ID
FROM BILL_COLLECTION BC
WHERE BC.outstanding > 0
)
AND
s.student_ID NOT IN (
SELECT V.student_ID
FROM VISITOR v
WHERE v.enter_time >= TO_DATE('2023-03-01', 'YYYY-MM-DD')
AND v.enter_time < TO_DATE('2023-04-01', 'YYYY-MM-DD')
);

20.SELECT *
FROM STUDENT s
WHERE s.student_id IN (
    SELECT a.STUDENT_ID
    FROM VISITOR a
    INNER JOIN VISITOR b ON a.student_id= b.student_id AND a.vid<> b.vid
);

21.SELECT sum(bc.Total) as "TOTAL RENT PAID"
FROM STUDENT s
JOIN BILL_COLLECTION b
on S.student_ID = b.STD_ID
JOIN GYM g ON s.student_ID = g.student_ID;

22.SELECT e.name, e.type
FROM expenses e
INNER JOIN hostel h ON e.hostel_ID = h.hostel_ID
WHERE h.residency_type = 'Boys Hostel'
AND TO_DATE(e.expense_date, 'MM-DD-YYYY') = TO_DATE('02-01-2022', 'MM-DD-YYYY');

23.SELECT h.Hostel_ID,
CONCAT('$', SUM(e.Total)) AS "Total Expenses"
FROM HOSTEL h
JOIN EXPENSES e on h.Hostel_ID = e.hostel_ID
WHERE TO_CHAR(expense_date, 'YYYY') = '2023'
GROUP BY h.Hostel_ID;

24.SELECT s1.student_id AS "Student 1 ID", s1.stdname AS "Student 1 Name",
s2.student_id AS "Student 2 ID", s2.stdname AS "Student 2 Name",
r1.roomno AS "Student 1 Room",  r2.roomno AS "Student 2 Room", r1.floors as Floor
from student s1
join student s2 ON s1.STDROOMNO +1 = s2.STDROOMNO OR
s1.STDROOMNO - 1 = s2.STDROOMNO
join room r1 ON s1.STDROOMNO = r1.ROOMNO
join room r2 ON s2.STDROOMNO = r2.ROOMNO
where s1.stdroomno <> s2.stdroomno AND r1.floors = r2.floors;

25.SELECT h.RESIDENCY_TYPE, h.ADDRESS , r.ROOMNO, r.RENT
FROM HOSTEL h
INNER join ROOM r
ON r.HOSTEL_ID = h.HOSTEL_ID
WHERE r.CAPACITY >=2

26.SELECT e.HOSTEL_ID, h.RESIDENCY_TYPE, count(e.ID) as "EXPENSE COUNT"
FROM EXPENSES e
INNER JOIN HOSTEL h
ON e.HOSTEL_ID = h.HOSTEL_ID
GROUP BY e.HOSTEL_ID, h.RESIDENCY_TYPE
ORDER BY e.HOSTEL_ID

27.SELECT *
FROM HOSTEL h
INNER join EXPENSES e
on e.HOSTEL_ID = h.HOSTEL_ID
WHERE e.TOTAL = (
    SELECT max(e2.TOTAL)
    FROM HOSTEL h2
    INNER join EXPENSES e2
    on e2.HOSTEL_ID = h2.HOSTEL_ID
    where   TO_CHAR(e2.EXPENSE_DATE, 'MM/YYYY') = TO_CHAR(SYSDATE,
            'MM/YYYY')
    )

28.SELECT s.STUDENT_ID , g.MEMBERSHIP_STATUS as STATUS
FROM STUDENT s
INNER JOIN GYM g on g.STUDENT_ID = s.STUDENT_ID
INNER JOIN ROOM r on s.STDROOMNO = r.ROOMNO
WHERE r.ROOMTYPE = 'Double' AND g.MEMBERSHIP_STATUS = 1

29.SELECT DISTINCT STD.STDName
FROM STUDENT STD
JOIN SHIFT_REQUESTS SR ON STD.student_ID = SR.requesterID
JOIN BILL_COLLECTION BC ON SR.swapperID = BC.STD_ID
WHERE BC.outstanding > 0
AND EXTRACT(MONTH FROM BC.billPaidDate) = EXTRACT(MONTH FROM SYSDATE)

30.SELECT STD_ID, COUNT(*) AS paid_bills_count
FROM BILL_COLLECTION
WHERE EXTRACT(MONTH FROM billPaidDate) = EXTRACT(MONTH FROM SYSDATE)
AND EXTRACT(YEAR FROM billPaidDate) = EXTRACT(YEAR FROM SYSDATE)
AND paid = 1
GROUP BY STD_ID
ORDER BY COUNT(*) DESC


Question 2:

1. FROM STUDENT s1
INNER JOIN GYM g
on g.STUDENT_ID = s1.STUDENT_ID
UNION
SELECT s2.*
FROM STUDENT s2
INNER JOIN BILL_COLLECTION b
on s2.STUDENT_ID = b.STD_ID
where b.OUTSTANDING > 0

2.SELECT S1.*
FROM STUDENT S1
INNER JOIN BILL_COLLECTION bc
on S1.STUDENT_ID = bc.STD_ID
WHERE bc.OUTSTANDING > 0
INTERSECT
SELECT S2.*
FROM STUDENT S2
INNER JOIN BILL_COLLECTION bc
on S2.STUDENT_ID = bc.STD_ID
WHERE bc.CURRENTBILLINGMONTH = TO_CHAR(SYSDATE,'Month')

3.SELECT s1.*
FROM STUDENT s1
INNER JOIN VISITOR v1
on s1.STUDENT_ID = v1.STUDENT_ID
INTERSECT
SELECT s2.*
FROM STUDENT s2
INNER JOIN VISITOR v2
on s2.STUDENT_ID = v2.STUDENT_ID
where v2.RELATION ='Friend'

4.SELECT DISTINCT roomtype as LISTS
FROM ROOM
union
SELECT DESIGNATION
FROM ADMIN

5.SELECT s1.STDNAME
FROM STUDENT s1
INNER JOIN visitor v
on v.STUDENT_ID = s1.STUDENT_ID
INTERSECT
SELECT s2.STDNAME
FROM STUDENT s2
INNER JOIN GYM g
on s2.STUDENT_ID = g.STUDENT_ID


Question 3:

1.SELECT DISTINCT s.Name
FROM Salesperson s
JOIN Orders o ON s.ID = o.Salesperson_id
JOIN Customer c ON o.Cust_id = c.ID
WHERE c.Name = 'Mubeen'

2.SELECT s.Name
FROM Salesperson s
JOIN Orders o ON s.ID = o.Salesperson_id
Group by s.ID, s.Name
Having COUNT(o.OrderNumber) >= 2;

3.Insert into highAchiever(Name ,Age )
Select Name, Age
From Salesperson
Where Salary >=100000

4.SELECT Name
FROM Customer
WHERE Name NOT LIKE '%a%'

5.SELECT *
FROM Customer
WHERE City IN (
SELECT City
FROM Customer
GROUP BY City
HAVING COUNT(*) > 1
)

6.SELECT s.Name
FROM Salesperson s
LEFT JOIN Orders o ON s.ID = o.Salesperson_id WHERE o.Cust_id IS NULL OR o.Cust_id <> (
SELECT c.ID FROM Customer c
WHERE c.Name = 'Jahanzaib' )

7.Select S.Name
From Salesperson S
Where S.Salary > (
SELECT Salary A
FROM A.Salesperson
WHERE A.Name = 'Abdullah'
)


8."
ID	Salesperson Name	Age	Salary	Customer Name	City	Industry Type
1	Ahmad	            61	140000	NULL	NULL	NULL
2	Ali	                34	44000	NULL	NULL	NULL
5	Noor               	34	40000	NULL	NULL	NULL
7	Maryam	            41	52000	Musa	Chakdara	B
8	Hassan	            57	115000	NULL	NULL	NULL
11	Abdullah	        38	38000	Shajee	Chakdara	B
"



-- End of file    THANK YOU